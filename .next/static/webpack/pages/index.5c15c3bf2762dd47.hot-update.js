"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./utils/context.js":
/*!**************************!*\
  !*** ./utils/context.js ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getAllHistory\": function() { return /* binding */ getAllHistory; },\n/* harmony export */   \"getTokenAddress\": function() { return /* binding */ getTokenAddress; },\n/* harmony export */   \"getTokenBalance\": function() { return /* binding */ getTokenBalance; },\n/* harmony export */   \"hasValidAllowance\": function() { return /* binding */ hasValidAllowance; },\n/* harmony export */   \"increaseAllowance\": function() { return /* binding */ increaseAllowance; },\n/* harmony export */   \"swapEthToToken\": function() { return /* binding */ swapEthToToken; },\n/* harmony export */   \"swapTokenToEth\": function() { return /* binding */ swapTokenToEth; },\n/* harmony export */   \"swapTokenToToken\": function() { return /* binding */ swapTokenToToken; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @swc/helpers/src/_async_to_generator.mjs */ \"./node_modules/@swc/helpers/src/_async_to_generator.mjs\");\n/* harmony import */ var _Users_Playground_Documents_Tobi_projects_token_marketplace_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/next/dist/compiled/regenerator-runtime/runtime.js */ \"./node_modules/next/dist/compiled/regenerator-runtime/runtime.js\");\n/* harmony import */ var _Users_Playground_Documents_Tobi_projects_token_marketplace_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Users_Playground_Documents_Tobi_projects_token_marketplace_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var _contract__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./contract */ \"./utils/contract.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"./utils/utils.js\");\n\n\n\n\n\nfunction swapEthToToken(tokenName, amount) {\n    return _swapEthToToken.apply(this, arguments);\n}\nfunction _swapEthToToken() {\n    _swapEthToToken = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_Users_Playground_Documents_Tobi_projects_token_marketplace_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(tokenName, amount) {\n        var tx, contractObj, data;\n        return _Users_Playground_Documents_Tobi_projects_token_marketplace_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    _ctx.prev = 0;\n                    tx = {\n                        value: toWei(amount)\n                    };\n                    _ctx.next = 4;\n                    return (0,_contract__WEBPACK_IMPORTED_MODULE_1__.contract)();\n                case 4:\n                    contractObj = _ctx.sent;\n                    _ctx.next = 7;\n                    return contractObj.swapEthToToken(tokenName, tx);\n                case 7:\n                    data = _ctx.sent;\n                    _ctx.next = 10;\n                    return data.wait();\n                case 10:\n                    receipt = _ctx.sent;\n                    return _ctx.abrupt(\"return\", receipt);\n                case 14:\n                    _ctx.prev = 14;\n                    _ctx.t0 = _ctx[\"catch\"](0);\n                    return _ctx.abrupt(\"return\", parseErrorMsg(_ctx.t0));\n                case 17:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee, null, [\n            [\n                0,\n                14\n            ]\n        ]);\n    }));\n    return _swapEthToToken.apply(this, arguments);\n}\nfunction hasValidAllowance(owner, tokenName, amount) {\n    return _hasValidAllowance.apply(this, arguments);\n}\nfunction _hasValidAllowance() {\n    _hasValidAllowance = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_Users_Playground_Documents_Tobi_projects_token_marketplace_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(owner, tokenName, amount) {\n        var contractObj, address, tokenContractObj, data, result;\n        return _Users_Playground_Documents_Tobi_projects_token_marketplace_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    _ctx.prev = 0;\n                    _ctx.next = 3;\n                    return (0,_contract__WEBPACK_IMPORTED_MODULE_1__.contract)();\n                case 3:\n                    contractObj = _ctx.sent;\n                    _ctx.next = 6;\n                    return contractObj.getTokenAddress(tokenName);\n                case 6:\n                    address = _ctx.sent;\n                    _ctx.next = 9;\n                    return (0,_contract__WEBPACK_IMPORTED_MODULE_1__.tokenContract)();\n                case 9:\n                    tokenContractObj = _ctx.sent;\n                    _ctx.next = 12;\n                    return tokenContractObj.allowance(owner, \"0x4aeA1B5a647715B741Ef3c7F06E6C8477fFf19E8\");\n                case 12:\n                    data = _ctx.sent;\n                    result = ethers__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(data.toString()).get(ethers__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(toWei(amount)));\n                    return _ctx.abrupt(\"return\", result);\n                case 17:\n                    _ctx.prev = 17;\n                    _ctx.t0 = _ctx[\"catch\"](0);\n                    return _ctx.abrupt(\"return\", parseErrorMsg(_ctx.t0));\n                case 20:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee, null, [\n            [\n                0,\n                17\n            ]\n        ]);\n    }));\n    return _hasValidAllowance.apply(this, arguments);\n}\nfunction swapTokenToEth(tokenName, amount) {\n    return _swapTokenToEth.apply(this, arguments);\n}\nfunction _swapTokenToEth() {\n    _swapTokenToEth = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_Users_Playground_Documents_Tobi_projects_token_marketplace_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(tokenName, amount) {\n        var contractObj, data, result;\n        return _Users_Playground_Documents_Tobi_projects_token_marketplace_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    _ctx.prev = 0;\n                    _ctx.next = 3;\n                    return (0,_contract__WEBPACK_IMPORTED_MODULE_1__.contract)();\n                case 3:\n                    contractObj = _ctx.sent;\n                    _ctx.next = 6;\n                    return contractObj.swapTokenToEth(tokenName, toWei(amount));\n                case 6:\n                    data = _ctx.sent;\n                    _ctx.next = 9;\n                    return data.wait();\n                case 9:\n                    result = _ctx.sent;\n                    return _ctx.abrupt(\"return\", result);\n                case 13:\n                    _ctx.prev = 13;\n                    _ctx.t0 = _ctx[\"catch\"](0);\n                    return _ctx.abrupt(\"return\", parseErrorMsg(_ctx.t0));\n                case 16:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee, null, [\n            [\n                0,\n                13\n            ]\n        ]);\n    }));\n    return _swapTokenToEth.apply(this, arguments);\n}\nfunction swapTokenToToken(srcToken, destToken, amount) {\n    return _swapTokenToToken.apply(this, arguments);\n}\nfunction _swapTokenToToken() {\n    _swapTokenToToken = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_Users_Playground_Documents_Tobi_projects_token_marketplace_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(srcToken, destToken, amount) {\n        var contractObj, data, receipt1;\n        return _Users_Playground_Documents_Tobi_projects_token_marketplace_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    _ctx.prev = 0;\n                    _ctx.next = 3;\n                    return (0,_contract__WEBPACK_IMPORTED_MODULE_1__.contract)();\n                case 3:\n                    contractObj = _ctx.sent;\n                    _ctx.next = 6;\n                    return contractObj.swapTokenToToken(srcToken, destToken, toWei(amount));\n                case 6:\n                    data = _ctx.sent;\n                    _ctx.next = 9;\n                    return data.wait();\n                case 9:\n                    receipt1 = _ctx.sent;\n                    return _ctx.abrupt(\"return\", receipt1);\n                case 13:\n                    _ctx.prev = 13;\n                    _ctx.t0 = _ctx[\"catch\"](0);\n                    return _ctx.abrupt(\"return\", parseErrorMsg(_ctx.t0));\n                case 16:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee, null, [\n            [\n                0,\n                13\n            ]\n        ]);\n    }));\n    return _swapTokenToToken.apply(this, arguments);\n}\nfunction getTokenBalance(tokenName, address) {\n    return _getTokenBalance.apply(this, arguments);\n}\nfunction _getTokenBalance() {\n    _getTokenBalance = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_Users_Playground_Documents_Tobi_projects_token_marketplace_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(tokenName, address) {\n        var contractObj, balance;\n        return _Users_Playground_Documents_Tobi_projects_token_marketplace_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    _ctx.next = 2;\n                    return (0,_contract__WEBPACK_IMPORTED_MODULE_1__.contract)();\n                case 2:\n                    contractObj = _ctx.sent;\n                    _ctx.next = 5;\n                    return contractObj.getBalance(tokenName, address);\n                case 5:\n                    balance = _ctx.sent;\n                    return _ctx.abrupt(\"return\", balance);\n                case 7:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee);\n    }));\n    return _getTokenBalance.apply(this, arguments);\n}\nfunction getTokenAddress(tokenName) {\n    return _getTokenAddress.apply(this, arguments);\n}\nfunction _getTokenAddress() {\n    _getTokenAddress = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_Users_Playground_Documents_Tobi_projects_token_marketplace_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(tokenName) {\n        var contractObj, address;\n        return _Users_Playground_Documents_Tobi_projects_token_marketplace_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    _ctx.prev = 0;\n                    _ctx.next = 3;\n                    return (0,_contract__WEBPACK_IMPORTED_MODULE_1__.contract)();\n                case 3:\n                    contractObj = _ctx.sent;\n                    _ctx.next = 6;\n                    return contractObj.getTokenAddress(tokenName);\n                case 6:\n                    address = _ctx.sent;\n                    return _ctx.abrupt(\"return\", address);\n                case 10:\n                    _ctx.prev = 10;\n                    _ctx.t0 = _ctx[\"catch\"](0);\n                    return _ctx.abrupt(\"return\", parseErrorMsg(_ctx.t0));\n                case 13:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee, null, [\n            [\n                0,\n                10\n            ]\n        ]);\n    }));\n    return _getTokenAddress.apply(this, arguments);\n}\nfunction increaseAllowance(tokenName, amount) {\n    return _increaseAllowance.apply(this, arguments);\n}\nfunction _increaseAllowance() {\n    _increaseAllowance = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_Users_Playground_Documents_Tobi_projects_token_marketplace_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(tokenName, amount) {\n        var contractObj, address, tokenContractObj, data, receipt1;\n        return _Users_Playground_Documents_Tobi_projects_token_marketplace_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    _ctx.prev = 0;\n                    _ctx.next = 3;\n                    return (0,_contract__WEBPACK_IMPORTED_MODULE_1__.contract)();\n                case 3:\n                    contractObj = _ctx.sent;\n                    _ctx.next = 6;\n                    return contractObj.getTokenAddress(tokenName);\n                case 6:\n                    address = _ctx.sent;\n                    _ctx.next = 9;\n                    return (0,_contract__WEBPACK_IMPORTED_MODULE_1__.tokenContract)();\n                case 9:\n                    tokenContractObj = _ctx.sent;\n                    _ctx.next = 12;\n                    return tokenContractObj.approve(\"0x4aeA1B5a647715B741Ef3c7F06E6C8477fFf19E8\", toWei(amount));\n                case 12:\n                    data = _ctx.sent;\n                    _ctx.next = 15;\n                    return data.wait();\n                case 15:\n                    receipt1 = _ctx.sent;\n                    return _ctx.abrupt(\"return\", receipt1);\n                case 19:\n                    _ctx.prev = 19;\n                    _ctx.t0 = _ctx[\"catch\"](0);\n                    return _ctx.abrupt(\"return\", parseErrorMsg(_ctx.t0));\n                case 22:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee, null, [\n            [\n                0,\n                19\n            ]\n        ]);\n    }));\n    return _increaseAllowance.apply(this, arguments);\n}\nfunction getAllHistory() {\n    return _getAllHistory.apply(this, arguments);\n}\nfunction _getAllHistory() {\n    _getAllHistory = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_Users_Playground_Documents_Tobi_projects_token_marketplace_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n        var contractObj, getAllHistory, historyTransaction;\n        return _Users_Playground_Documents_Tobi_projects_token_marketplace_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    _ctx.prev = 0;\n                    _ctx.next = 3;\n                    return (0,_contract__WEBPACK_IMPORTED_MODULE_1__.contract)();\n                case 3:\n                    contractObj = _ctx.sent;\n                    _ctx.next = 6;\n                    return contractObj.getAllHistory();\n                case 6:\n                    getAllHistory = _ctx.sent;\n                    historyTransaction = getAllHistory.map(function(history, i) {\n                        return {\n                            historyId: history.historyId.toNumber(),\n                            tokenA: history.tokenA,\n                            tokenB: history.tokenB,\n                            inputValue: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.toEth)(history === null || history === void 0 ? void 0 : history.inputValue),\n                            outputValue: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.toEth)(history === null || history === void 0 ? void 0 : history.outputValue),\n                            userAddress: history.userAddress\n                        };\n                    });\n                    return _ctx.abrupt(\"return\", historyTransaction);\n                case 11:\n                    _ctx.prev = 11;\n                    _ctx.t0 = _ctx[\"catch\"](0);\n                    return _ctx.abrupt(\"return\", parseErrorMsg(_ctx.t0));\n                case 14:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee, null, [\n            [\n                0,\n                11\n            ]\n        ]);\n    }));\n    return _getAllHistory.apply(this, arguments);\n}\nfunction toWei(amount) {\n    var toWei = ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.utils.parseUnits(amount.toString());\n    return toWei.toString();\n}\nfunction parseErrorMsg(e) {\n    var ref;\n    var json = JSON.parse(JSON.stringify(e));\n    return (json === null || json === void 0 ? void 0 : json.reason) || (json === null || json === void 0 ? void 0 : (ref = json.error) === null || ref === void 0 ? void 0 : ref.message);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./utils/context.js\n"));

/***/ }),

/***/ "./utils/contract.js":
/*!***************************!*\
  !*** ./utils/contract.js ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"contract\": function() { return /* binding */ contract; },\n/* harmony export */   \"tokenContract\": function() { return /* binding */ tokenContract; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @swc/helpers/src/_async_to_generator.mjs */ \"./node_modules/@swc/helpers/src/_async_to_generator.mjs\");\n/* harmony import */ var _Users_Playground_Documents_Tobi_projects_token_marketplace_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/next/dist/compiled/regenerator-runtime/runtime.js */ \"./node_modules/next/dist/compiled/regenerator-runtime/runtime.js\");\n/* harmony import */ var _Users_Playground_Documents_Tobi_projects_token_marketplace_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Users_Playground_Documents_Tobi_projects_token_marketplace_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var _CustomDex_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CustomDex.json */ \"./utils/CustomDex.json\");\n/* harmony import */ var _CustomToken_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CustomToken.json */ \"./utils/CustomToken.json\");\n\n\n// contract.js\n\n\n\n/**\n * Fallback RPC to Monad Testnet (chainId 10143).\n * We try to use window.ethereum (user's wallet) when available,\n * otherwise we create a JsonRpcProvider to the public Monad testnet RPC.\n */ var MONAD_TESTNET_RPC = \"https://testnet-rpc.monad.xyz\";\nvar DEX_CONTRACT_ADDRESS = \"0x4aeA1B5a647715B741Ef3c7F06E6C8477fFf19E8\"; // update if your deployed address differs\nfunction getProviderAndSigner() {\n    return _getProviderAndSigner.apply(this, arguments);\n}\nfunction _getProviderAndSigner() {\n    _getProviderAndSigner = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_Users_Playground_Documents_Tobi_projects_token_marketplace_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n        var web3Provider, signer, provider;\n        return _Users_Playground_Documents_Tobi_projects_token_marketplace_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    if (!( true && window.ethereum)) {\n                        _ctx.next = 6;\n                        break;\n                    }\n                    web3Provider = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.providers.Web3Provider(window.ethereum);\n                    signer = web3Provider.getSigner();\n                    return _ctx.abrupt(\"return\", {\n                        provider: web3Provider,\n                        signer: signer\n                    });\n                case 6:\n                    provider = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.providers.JsonRpcProvider(MONAD_TESTNET_RPC, {\n                        name: \"monad-testnet\",\n                        chainId: 10143\n                    });\n                    return _ctx.abrupt(\"return\", {\n                        provider: provider,\n                        signer: null\n                    });\n                case 8:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee);\n    }));\n    return _getProviderAndSigner.apply(this, arguments);\n}\n// returns an ERC20 token contract instance at `address` connected to signer (if available) or provider\nvar tokenContract = function() {\n    var _ref = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_Users_Playground_Documents_Tobi_projects_token_marketplace_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(address) {\n        var ref, provider, signer, used;\n        return _Users_Playground_Documents_Tobi_projects_token_marketplace_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    if (address) {\n                        _ctx.next = 2;\n                        break;\n                    }\n                    throw new Error(\"tokenContract: address is required\");\n                case 2:\n                    _ctx.next = 4;\n                    return getProviderAndSigner();\n                case 4:\n                    ref = _ctx.sent;\n                    provider = ref.provider;\n                    signer = ref.signer;\n                    used = signer !== null && signer !== void 0 ? signer : provider;\n                    return _ctx.abrupt(\"return\", new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.Contract(address, _CustomToken_json__WEBPACK_IMPORTED_MODULE_2__.abi, used));\n                case 9:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee);\n    }));\n    return function tokenContract(address) {\n        return _ref.apply(this, arguments);\n    };\n}();\n// returns the DEX contract instance (connected to signer if wallet available)\nvar contract = function() {\n    var _ref = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_Users_Playground_Documents_Tobi_projects_token_marketplace_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n        var ref, provider, signer, used;\n        return _Users_Playground_Documents_Tobi_projects_token_marketplace_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    _ctx.next = 2;\n                    return getProviderAndSigner();\n                case 2:\n                    ref = _ctx.sent;\n                    provider = ref.provider;\n                    signer = ref.signer;\n                    used = signer !== null && signer !== void 0 ? signer : provider;\n                    return _ctx.abrupt(\"return\", new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.Contract(DEX_CONTRACT_ADDRESS, _CustomDex_json__WEBPACK_IMPORTED_MODULE_1__.abi, used));\n                case 7:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee);\n    }));\n    return function contract() {\n        return _ref.apply(this, arguments);\n    };\n}(); // import { ethers } from \"ethers\";\n // import CustomDexABI from \"./CustomDex.json\";\n // import CustomTokenABI from \"./CustomToken.json\";\n // export const tokenContract = async (address) => {\n //   const provider = new ethers.providers.Web3Provider(window.ethereum);\n //   const { ethereum } = window;\n //   if (ethereum) {\n //     const signer = provider.getSigner();\n //     const contractReader = new ethers.Contract(\n //       address,\n //       CustomTokenABI.abi,\n //       signer\n //     );\n //     return contractReader;\n //   }\n // };\n // export const contract = async () => {\n //     const provider = new ethers.providers.Web3Provider(window.ethereum);\n //     const ethereum = window;\n //     if (ethereum) {\n //         const signer = provider.getSigner();\n //         const contractReader = new ethers.Contract(\n //             \"0x4aeA1B5a647715B741Ef3c7F06E6C8477fFf19E8\",\n //             CustomDexABI.abi,\n //             signer\n //         );\n //         return contractReader;\n //     }\n // } \n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi91dGlscy9jb250cmFjdC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUNBOztBQURBLGNBQWM7QUFDa0I7QUFDWTtBQUNJO0FBRWhEOzs7O0dBSUcsQ0FDSCxJQUFNRyxpQkFBaUIsR0FBRywrQkFBK0I7QUFDekQsSUFBTUMsb0JBQW9CLEdBQUcsNENBQTRDLEVBQUUsMENBQTBDO1NBRXRHQyxvQkFBb0I7V0FBcEJBLHFCQUFvQjs7U0FBcEJBLHFCQUFvQjtJQUFwQkEscUJBQW9CLEdBQW5DLDhRQUFzQztZQUU1QkMsWUFBWSxFQUNaQyxNQUFNLEVBSU5DLFFBQVE7Ozs7d0JBTlosT0FBNkIsSUFBSUMsTUFBTSxDQUFDQyxRQUFROzs7O29CQUM1Q0osWUFBWSxHQUFHLElBQUlOLGlFQUE2QixDQUFDUyxNQUFNLENBQUNDLFFBQVEsQ0FBQyxDQUFDO29CQUNsRUgsTUFBTSxHQUFHRCxZQUFZLENBQUNPLFNBQVMsRUFBRSxDQUFDO2lEQUNqQzt3QkFBRUwsUUFBUSxFQUFFRixZQUFZO3dCQUFFQyxNQUFNLEVBQU5BLE1BQU07cUJBQUU7O29CQUduQ0MsUUFBUSxHQUFHLElBQUlSLG9FQUFnQyxDQUFDRyxpQkFBaUIsRUFBRTt3QkFBRVksSUFBSSxFQUFFLGVBQWU7d0JBQUVDLE9BQU8sRUFBRSxLQUFLO3FCQUFFLENBQUMsQ0FBQztpREFDN0c7d0JBQUVSLFFBQVEsRUFBUkEsUUFBUTt3QkFBRUQsTUFBTSxFQUFFLElBQUk7cUJBQUU7Ozs7OztLQUVwQztXQVZjRixxQkFBb0I7O0FBWW5DLHVHQUF1RztBQUNoRyxJQUFNWSxhQUFhO2VBQUcsNFFBQU9DLE9BQU8sRUFBSztZQUVqQixHQUE0QixFQUFqRFYsUUFBUSxFQUFFRCxNQUFNLEVBQ2xCWSxJQUFJOzs7O3dCQUZMRCxPQUFPOzs7O29CQUFFLE1BQU0sSUFBSUUsS0FBSyxDQUFDLG9DQUFvQyxDQUFDLENBQUM7OzsyQkFDakNmLG9CQUFvQixFQUFFOztvQkFBNUIsR0FBNEI7b0JBQWpERyxRQUFRLEdBQWEsR0FBNEIsQ0FBakRBLFFBQVE7b0JBQUVELE1BQU0sR0FBSyxHQUE0QixDQUF2Q0EsTUFBTTtvQkFDbEJZLElBQUksR0FBR1osTUFBTSxhQUFOQSxNQUFNLGNBQU5BLE1BQU0sR0FBSUMsUUFBUSxDQUFDO2lEQUN6QixJQUFJUixtREFBZSxDQUFDa0IsT0FBTyxFQUFFaEIsa0RBQWtCLEVBQUVpQixJQUFJLENBQUM7Ozs7OztLQUM5RDtvQkFMWUYsYUFBYSxDQUFVQyxPQUFPOzs7R0FLMUMsQ0FBQztBQUVGLDhFQUE4RTtBQUN2RSxJQUFNSyxRQUFRO2VBQUcsOFFBQVk7WUFDTCxHQUE0QixFQUFqRGYsUUFBUSxFQUFFRCxNQUFNLEVBQ2xCWSxJQUFJOzs7OzsyQkFEeUJkLG9CQUFvQixFQUFFOztvQkFBNUIsR0FBNEI7b0JBQWpERyxRQUFRLEdBQWEsR0FBNEIsQ0FBakRBLFFBQVE7b0JBQUVELE1BQU0sR0FBSyxHQUE0QixDQUF2Q0EsTUFBTTtvQkFDbEJZLElBQUksR0FBR1osTUFBTSxhQUFOQSxNQUFNLGNBQU5BLE1BQU0sR0FBSUMsUUFBUSxDQUFDO2lEQUN6QixJQUFJUixtREFBZSxDQUFDSSxvQkFBb0IsRUFBRUgsZ0RBQWdCLEVBQUVrQixJQUFJLENBQUM7Ozs7OztLQUN6RTtvQkFKWUksUUFBUTs7O0dBSXBCLENBQUMsQ0FzQkYsbUNBQW1DO0NBQ25DLCtDQUErQztDQUMvQyxtREFBbUQ7Q0FFbkQsb0RBQW9EO0NBQ3BELHlFQUF5RTtDQUN6RSxpQ0FBaUM7Q0FFakMsb0JBQW9CO0NBQ3BCLDJDQUEyQztDQUUzQyxrREFBa0Q7Q0FDbEQsaUJBQWlCO0NBQ2pCLDRCQUE0QjtDQUM1QixlQUFlO0NBQ2YsU0FBUztDQUVULDZCQUE2QjtDQUM3QixNQUFNO0NBQ04sS0FBSztDQUdMLHdDQUF3QztDQUN4QywyRUFBMkU7Q0FDM0UsK0JBQStCO0NBRS9CLHNCQUFzQjtDQUN0QiwrQ0FBK0M7Q0FFL0Msc0RBQXNEO0NBQ3RELDREQUE0RDtDQUM1RCxnQ0FBZ0M7Q0FDaEMscUJBQXFCO0NBQ3JCLGFBQWE7Q0FFYixpQ0FBaUM7Q0FDakMsUUFBUTtDQUNSLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vdXRpbHMvY29udHJhY3QuanM/ODliMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBjb250cmFjdC5qc1xuaW1wb3J0IHsgZXRoZXJzIH0gZnJvbSBcImV0aGVyc1wiO1xuaW1wb3J0IEN1c3RvbURleEFCSSBmcm9tIFwiLi9DdXN0b21EZXguanNvblwiO1xuaW1wb3J0IEN1c3RvbVRva2VuQUJJIGZyb20gXCIuL0N1c3RvbVRva2VuLmpzb25cIjtcblxuLyoqXG4gKiBGYWxsYmFjayBSUEMgdG8gTW9uYWQgVGVzdG5ldCAoY2hhaW5JZCAxMDE0MykuXG4gKiBXZSB0cnkgdG8gdXNlIHdpbmRvdy5ldGhlcmV1bSAodXNlcidzIHdhbGxldCkgd2hlbiBhdmFpbGFibGUsXG4gKiBvdGhlcndpc2Ugd2UgY3JlYXRlIGEgSnNvblJwY1Byb3ZpZGVyIHRvIHRoZSBwdWJsaWMgTW9uYWQgdGVzdG5ldCBSUEMuXG4gKi9cbmNvbnN0IE1PTkFEX1RFU1RORVRfUlBDID0gXCJodHRwczovL3Rlc3RuZXQtcnBjLm1vbmFkLnh5elwiO1xuY29uc3QgREVYX0NPTlRSQUNUX0FERFJFU1MgPSBcIjB4NGFlQTFCNWE2NDc3MTVCNzQxRWYzYzdGMDZFNkM4NDc3ZkZmMTlFOFwiOyAvLyB1cGRhdGUgaWYgeW91ciBkZXBsb3llZCBhZGRyZXNzIGRpZmZlcnNcblxuYXN5bmMgZnVuY3Rpb24gZ2V0UHJvdmlkZXJBbmRTaWduZXIoKSB7XG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIHdpbmRvdy5ldGhlcmV1bSkge1xuICAgIGNvbnN0IHdlYjNQcm92aWRlciA9IG5ldyBldGhlcnMucHJvdmlkZXJzLldlYjNQcm92aWRlcih3aW5kb3cuZXRoZXJldW0pO1xuICAgIGNvbnN0IHNpZ25lciA9IHdlYjNQcm92aWRlci5nZXRTaWduZXIoKTtcbiAgICByZXR1cm4geyBwcm92aWRlcjogd2ViM1Byb3ZpZGVyLCBzaWduZXIgfTtcbiAgfSBlbHNlIHtcbiAgICAvLyBmYWxsYmFjayBwcm92aWRlciB0byBNb25hZCB0ZXN0bmV0XG4gICAgY29uc3QgcHJvdmlkZXIgPSBuZXcgZXRoZXJzLnByb3ZpZGVycy5Kc29uUnBjUHJvdmlkZXIoTU9OQURfVEVTVE5FVF9SUEMsIHsgbmFtZTogXCJtb25hZC10ZXN0bmV0XCIsIGNoYWluSWQ6IDEwMTQzIH0pO1xuICAgIHJldHVybiB7IHByb3ZpZGVyLCBzaWduZXI6IG51bGwgfTtcbiAgfVxufVxuXG4vLyByZXR1cm5zIGFuIEVSQzIwIHRva2VuIGNvbnRyYWN0IGluc3RhbmNlIGF0IGBhZGRyZXNzYCBjb25uZWN0ZWQgdG8gc2lnbmVyIChpZiBhdmFpbGFibGUpIG9yIHByb3ZpZGVyXG5leHBvcnQgY29uc3QgdG9rZW5Db250cmFjdCA9IGFzeW5jIChhZGRyZXNzKSA9PiB7XG4gIGlmICghYWRkcmVzcykgdGhyb3cgbmV3IEVycm9yKFwidG9rZW5Db250cmFjdDogYWRkcmVzcyBpcyByZXF1aXJlZFwiKTtcbiAgY29uc3QgeyBwcm92aWRlciwgc2lnbmVyIH0gPSBhd2FpdCBnZXRQcm92aWRlckFuZFNpZ25lcigpO1xuICBjb25zdCB1c2VkID0gc2lnbmVyID8/IHByb3ZpZGVyO1xuICByZXR1cm4gbmV3IGV0aGVycy5Db250cmFjdChhZGRyZXNzLCBDdXN0b21Ub2tlbkFCSS5hYmksIHVzZWQpO1xufTtcblxuLy8gcmV0dXJucyB0aGUgREVYIGNvbnRyYWN0IGluc3RhbmNlIChjb25uZWN0ZWQgdG8gc2lnbmVyIGlmIHdhbGxldCBhdmFpbGFibGUpXG5leHBvcnQgY29uc3QgY29udHJhY3QgPSBhc3luYyAoKSA9PiB7XG4gIGNvbnN0IHsgcHJvdmlkZXIsIHNpZ25lciB9ID0gYXdhaXQgZ2V0UHJvdmlkZXJBbmRTaWduZXIoKTtcbiAgY29uc3QgdXNlZCA9IHNpZ25lciA/PyBwcm92aWRlcjtcbiAgcmV0dXJuIG5ldyBldGhlcnMuQ29udHJhY3QoREVYX0NPTlRSQUNUX0FERFJFU1MsIEN1c3RvbURleEFCSS5hYmksIHVzZWQpO1xufTtcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbi8vIGltcG9ydCB7IGV0aGVycyB9IGZyb20gXCJldGhlcnNcIjtcbi8vIGltcG9ydCBDdXN0b21EZXhBQkkgZnJvbSBcIi4vQ3VzdG9tRGV4Lmpzb25cIjtcbi8vIGltcG9ydCBDdXN0b21Ub2tlbkFCSSBmcm9tIFwiLi9DdXN0b21Ub2tlbi5qc29uXCI7XG5cbi8vIGV4cG9ydCBjb25zdCB0b2tlbkNvbnRyYWN0ID0gYXN5bmMgKGFkZHJlc3MpID0+IHtcbi8vICAgY29uc3QgcHJvdmlkZXIgPSBuZXcgZXRoZXJzLnByb3ZpZGVycy5XZWIzUHJvdmlkZXIod2luZG93LmV0aGVyZXVtKTtcbi8vICAgY29uc3QgeyBldGhlcmV1bSB9ID0gd2luZG93O1xuXG4vLyAgIGlmIChldGhlcmV1bSkge1xuLy8gICAgIGNvbnN0IHNpZ25lciA9IHByb3ZpZGVyLmdldFNpZ25lcigpO1xuXG4vLyAgICAgY29uc3QgY29udHJhY3RSZWFkZXIgPSBuZXcgZXRoZXJzLkNvbnRyYWN0KFxuLy8gICAgICAgYWRkcmVzcyxcbi8vICAgICAgIEN1c3RvbVRva2VuQUJJLmFiaSxcbi8vICAgICAgIHNpZ25lclxuLy8gICAgICk7XG5cbi8vICAgICByZXR1cm4gY29udHJhY3RSZWFkZXI7XG4vLyAgIH1cbi8vIH07XG5cblxuLy8gZXhwb3J0IGNvbnN0IGNvbnRyYWN0ID0gYXN5bmMgKCkgPT4ge1xuLy8gICAgIGNvbnN0IHByb3ZpZGVyID0gbmV3IGV0aGVycy5wcm92aWRlcnMuV2ViM1Byb3ZpZGVyKHdpbmRvdy5ldGhlcmV1bSk7XG4vLyAgICAgY29uc3QgZXRoZXJldW0gPSB3aW5kb3c7XG5cbi8vICAgICBpZiAoZXRoZXJldW0pIHtcbi8vICAgICAgICAgY29uc3Qgc2lnbmVyID0gcHJvdmlkZXIuZ2V0U2lnbmVyKCk7XG5cbi8vICAgICAgICAgY29uc3QgY29udHJhY3RSZWFkZXIgPSBuZXcgZXRoZXJzLkNvbnRyYWN0KFxuLy8gICAgICAgICAgICAgXCIweDRhZUExQjVhNjQ3NzE1Qjc0MUVmM2M3RjA2RTZDODQ3N2ZGZjE5RThcIixcbi8vICAgICAgICAgICAgIEN1c3RvbURleEFCSS5hYmksXG4vLyAgICAgICAgICAgICBzaWduZXJcbi8vICAgICAgICAgKTtcblxuLy8gICAgICAgICByZXR1cm4gY29udHJhY3RSZWFkZXI7XG4vLyAgICAgfVxuLy8gfSAiXSwibmFtZXMiOlsiZXRoZXJzIiwiQ3VzdG9tRGV4QUJJIiwiQ3VzdG9tVG9rZW5BQkkiLCJNT05BRF9URVNUTkVUX1JQQyIsIkRFWF9DT05UUkFDVF9BRERSRVNTIiwiZ2V0UHJvdmlkZXJBbmRTaWduZXIiLCJ3ZWIzUHJvdmlkZXIiLCJzaWduZXIiLCJwcm92aWRlciIsIndpbmRvdyIsImV0aGVyZXVtIiwicHJvdmlkZXJzIiwiV2ViM1Byb3ZpZGVyIiwiZ2V0U2lnbmVyIiwiSnNvblJwY1Byb3ZpZGVyIiwibmFtZSIsImNoYWluSWQiLCJ0b2tlbkNvbnRyYWN0IiwiYWRkcmVzcyIsInVzZWQiLCJFcnJvciIsIkNvbnRyYWN0IiwiYWJpIiwiY29udHJhY3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./utils/contract.js\n"));

/***/ }),

/***/ "./utils/CustomDex.json":
/*!******************************!*\
  !*** ./utils/CustomDex.json ***!
  \******************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

module.exports = JSON.parse('{"_format":"hh-sol-artifact-1","contractName":"CustomDex","sourceName":"contracts/CustomEx.sol","abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"_historyIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllHistory","outputs":[{"components":[{"internalType":"uint256","name":"historyId","type":"uint256"},{"internalType":"string","name":"tokenA","type":"string"},{"internalType":"string","name":"tokenB","type":"string"},{"internalType":"uint256","name":"inputValue","type":"uint256"},{"internalType":"uint256","name":"outputValue","type":"uint256"},{"internalType":"address","name":"userAddress","type":"address"}],"internalType":"struct CustomDex.History[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"tokenName","type":"string"},{"internalType":"address","name":"_address","type":"address"}],"name":"getBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getEthBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"tokenName","type":"string"}],"name":"getName","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"tokenName","type":"string"}],"name":"getTokenAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"tokenName","type":"string"}],"name":"getTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"tokenName","type":"string"}],"name":"swapEthToToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"string","name":"tokenName","type":"string"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"swapTokenToEth","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"srcTokenName","type":"string"},{"internalType":"string","name":"destTokenName","type":"string"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"swapTokenToToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"tokenInstanceMap","outputs":[{"internalType":"contract ERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokens","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"bytecode":"","deployedBytecode":"0x6080604052600436106100a6575f3560e01c806370ed0ada1161006357806370ed0ada146101e257806389f4b3171461020c578063a93325ed14610248578063bf015aae14610284578063c4091236146102ac578063db6f63ee146102e8576100a6565b806319b3c12d146100aa57806339c5891a146100d45780634f64b2be146100fe5780635463109e1461013a57806363fcf7c5146101765780636932cf81146101a6575b5f80fd5b3480156100b5575f80fd5b506100be610324565b6040516100cb9190610eaa565b60405180910390f35b3480156100df575f80fd5b506100e861032a565b6040516100f591906110e3565b60405180910390f35b348015610109575f80fd5b50610124600480360381019061011f919061113e565b6105a2565b60405161013191906111b1565b60405180910390f35b348015610145575f80fd5b50610160600480360381019061015b91906112fd565b610647565b60405161016d9190610eaa565b60405180910390f35b610190600480360381019061018b91906112fd565b6106f9565b60405161019d9190610eaa565b60405180910390f35b3480156101b1575f80fd5b506101cc60048036038101906101c791906112fd565b610832565b6040516101d991906111b1565b60405180910390f35b3480156101ed575f80fd5b506101f66108e8565b6040516102039190610eaa565b60405180910390f35b348015610217575f80fd5b50610232600480360381019061022d919061136e565b6108ef565b60405161023f9190610eaa565b60405180910390f35b348015610253575f80fd5b5061026e600480360381019061026991906112fd565b6109ad565b60405161027b9190611423565b60405180910390f35b34801561028f575f80fd5b506102aa60048036038101906102a5919061143c565b6109f5565b005b3480156102b7575f80fd5b506102d260048036038101906102cd91906112fd565b610b88565b6040516102df91906114d3565b60405180910390f35b3480156102f3575f80fd5b5061030e600480360381019061030991906114ec565b610bce565b60405161031b9190610eaa565b60405180910390f35b60035481565b60605f60035490505f808267ffffffffffffffff81111561034e5761034d6111d9565b5b60405190808252806020026020018201604052801561038757816020015b610374610e4a565b81526020019060019003908161036c5790505b5090505f5b83811015610598575f6001826103a29190611573565b90505f60045f8381526020019081526020015f209050806040518060c00160405290815f82015481526020016001820180546103dd906115d3565b80601f0160208091040260200160405190810160405280929190818152602001828054610409906115d3565b80156104545780601f1061042b57610100808354040283529160200191610454565b820191905f5260205f20905b81548152906001019060200180831161043757829003601f168201915b5050505050815260200160028201805461046d906115d3565b80601f0160208091040260200160405190810160405280929190818152602001828054610499906115d3565b80156104e45780601f106104bb576101008083540402835291602001916104e4565b820191905f5260205f20905b8154815290600101906020018083116104c757829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505084868151811061056957610568611603565b5b60200260200101819052506001856105819190611573565b94505050808061059090611630565b91505061038c565b5080935050505090565b5f81815481106105b0575f80fd5b905f5260205f20015f9150905080546105c8906115d3565b80601f01602080910402602001604051908101604052809291908181526020018280546105f4906115d3565b801561063f5780601f106106165761010080835404028352916020019161063f565b820191905f5260205f20905b81548152906001019060200180831161062257829003601f168201915b505050505081565b5f60018260405161065891906116b1565b90815260200160405180910390205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106ce573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106f291906116db565b9050919050565b5f803490505f670de0b6b3a7640000600254836107169190611733565b6107209190611763565b905060018460405161073291906116b1565b90815260200160405180910390205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161079a9291906117a4565b6020604051808303815f875af11580156107b6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107da9190611800565b6107e2575f80fd5b5f6040518060400160405280600581526020017f4574686572000000000000000000000000000000000000000000000000000000815250905061082785828585610d91565b819350505050919050565b606060018260405161084491906116b1565b90815260200160405180910390205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b81526004015f60405180830381865afa1580156108b9573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f820116820180604052508101906108e19190611899565b9050919050565b5f47905090565b5f60018360405161090091906116b1565b90815260200160405180910390205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b815260040161096691906114d3565b602060405180830381865afa158015610981573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109a591906116db565b905092915050565b6001818051602081018201805184825260208301602085012081835280955050505050505f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600183604051610a0591906116b1565b90815260200160405180910390205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610a6f939291906118e0565b6020604051808303815f875af1158015610a8b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610aaf9190611800565b610ab7575f80fd5b600182604051610ac791906116b1565b90815260200160405180910390205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610b2f9291906117a4565b6020604051808303815f875af1158015610b4b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b6f9190611800565b610b77575f80fd5b610b8383838384610d91565b505050565b5f600182604051610b9991906116b1565b90815260200160405180910390205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f80670de0b6b3a764000083610be49190611733565b90505f60025482610bf59190611763565b905080471015610c3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c319061195f565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610c7d573d5f803e3d5ffd5b50600185604051610c8e91906116b1565b90815260200160405180910390205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401610cf8939291906118e0565b6020604051808303815f875af1158015610d14573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d389190611800565b610d40575f80fd5b5f6040518060400160405280600581526020017f45746865720000000000000000000000000000000000000000000000000000008152509050610d8586828585610d91565b81935050505092915050565b60035f815480929190610da390611630565b91905055505f60035490505f60045f8381526020019081526020015f20905081815f018190555033816005015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085816001019081610e1d9190611b11565b5084816002019081610e2f9190611b11565b50838160030181905550828160040181905550505050505050565b6040518060c001604052805f815260200160608152602001606081526020015f81526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090565b5f819050919050565b610ea481610e92565b82525050565b5f602082019050610ebd5f830184610e9b565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b610ef581610e92565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610f32578082015181840152602081019050610f17565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610f5782610efb565b610f618185610f05565b9350610f71818560208601610f15565b610f7a81610f3d565b840191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610fae82610f85565b9050919050565b610fbe81610fa4565b82525050565b5f60c083015f830151610fd95f860182610eec565b5060208301518482036020860152610ff18282610f4d565b9150506040830151848203604086015261100b8282610f4d565b91505060608301516110206060860182610eec565b5060808301516110336080860182610eec565b5060a083015161104660a0860182610fb5565b508091505092915050565b5f61105c8383610fc4565b905092915050565b5f602082019050919050565b5f61107a82610ec3565b6110848185610ecd565b93508360208202850161109685610edd565b805f5b858110156110d157848403895281516110b28582611051565b94506110bd83611064565b925060208a01995050600181019050611099565b50829750879550505050505092915050565b5f6020820190508181035f8301526110fb8184611070565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b61111d81610e92565b8114611127575f80fd5b50565b5f8135905061113881611114565b92915050565b5f602082840312156111535761115261110c565b5b5f6111608482850161112a565b91505092915050565b5f82825260208201905092915050565b5f61118382610efb565b61118d8185611169565b935061119d818560208601610f15565b6111a681610f3d565b840191505092915050565b5f6020820190508181035f8301526111c98184611179565b905092915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61120f82610f3d565b810181811067ffffffffffffffff8211171561122e5761122d6111d9565b5b80604052505050565b5f611240611103565b905061124c8282611206565b919050565b5f67ffffffffffffffff82111561126b5761126a6111d9565b5b61127482610f3d565b9050602081019050919050565b828183375f83830152505050565b5f6112a161129c84611251565b611237565b9050828152602081018484840111156112bd576112bc6111d5565b5b6112c8848285611281565b509392505050565b5f82601f8301126112e4576112e36111d1565b5b81356112f484826020860161128f565b91505092915050565b5f602082840312156113125761131161110c565b5b5f82013567ffffffffffffffff81111561132f5761132e611110565b5b61133b848285016112d0565b91505092915050565b61134d81610fa4565b8114611357575f80fd5b50565b5f8135905061136881611344565b92915050565b5f80604083850312156113845761138361110c565b5b5f83013567ffffffffffffffff8111156113a1576113a0611110565b5b6113ad858286016112d0565b92505060206113be8582860161135a565b9150509250929050565b5f819050919050565b5f6113eb6113e66113e184610f85565b6113c8565b610f85565b9050919050565b5f6113fc826113d1565b9050919050565b5f61140d826113f2565b9050919050565b61141d81611403565b82525050565b5f6020820190506114365f830184611414565b92915050565b5f805f606084860312156114535761145261110c565b5b5f84013567ffffffffffffffff8111156114705761146f611110565b5b61147c868287016112d0565b935050602084013567ffffffffffffffff81111561149d5761149c611110565b5b6114a9868287016112d0565b92505060406114ba8682870161112a565b9150509250925092565b6114cd81610fa4565b82525050565b5f6020820190506114e65f8301846114c4565b92915050565b5f80604083850312156115025761150161110c565b5b5f83013567ffffffffffffffff81111561151f5761151e611110565b5b61152b858286016112d0565b925050602061153c8582860161112a565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61157d82610e92565b915061158883610e92565b92508282019050808211156115a05761159f611546565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806115ea57607f821691505b6020821081036115fd576115fc6115a6565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f61163a82610e92565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361166c5761166b611546565b5b600182019050919050565b5f81905092915050565b5f61168b82610efb565b6116958185611677565b93506116a5818560208601610f15565b80840191505092915050565b5f6116bc8284611681565b915081905092915050565b5f815190506116d581611114565b92915050565b5f602082840312156116f0576116ef61110c565b5b5f6116fd848285016116c7565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61173d82610e92565b915061174883610e92565b92508261175857611757611706565b5b828204905092915050565b5f61176d82610e92565b915061177883610e92565b925082820261178681610e92565b9150828204841483151761179d5761179c611546565b5b5092915050565b5f6040820190506117b75f8301856114c4565b6117c46020830184610e9b565b9392505050565b5f8115159050919050565b6117df816117cb565b81146117e9575f80fd5b50565b5f815190506117fa816117d6565b92915050565b5f602082840312156118155761181461110c565b5b5f611822848285016117ec565b91505092915050565b5f61183d61183884611251565b611237565b905082815260208101848484011115611859576118586111d5565b5b611864848285610f15565b509392505050565b5f82601f8301126118805761187f6111d1565b5b815161189084826020860161182b565b91505092915050565b5f602082840312156118ae576118ad61110c565b5b5f82015167ffffffffffffffff8111156118cb576118ca611110565b5b6118d78482850161186c565b91505092915050565b5f6060820190506118f35f8301866114c4565b61190060208301856114c4565b61190d6040830184610e9b565b949350505050565b7f4465782069732072756e6e696e67206c6f77206f6e2062616c616e63650000005f82015250565b5f611949601d83611169565b915061195482611915565b602082019050919050565b5f6020820190508181035f8301526119768161193d565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026119d97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261199e565b6119e3868361199e565b95508019841693508086168417925050509392505050565b5f611a15611a10611a0b84610e92565b6113c8565b610e92565b9050919050565b5f819050919050565b611a2e836119fb565b611a42611a3a82611a1c565b8484546119aa565b825550505050565b5f90565b611a56611a4a565b611a61818484611a25565b505050565b5b81811015611a8457611a795f82611a4e565b600181019050611a67565b5050565b601f821115611ac957611a9a8161197d565b611aa38461198f565b81016020851015611ab2578190505b611ac6611abe8561198f565b830182611a66565b50505b505050565b5f82821c905092915050565b5f611ae95f1984600802611ace565b1980831691505092915050565b5f611b018383611ada565b9150826002028217905092915050565b611b1a82610efb565b67ffffffffffffffff811115611b3357611b326111d9565b5b611b3d82546115d3565b611b48828285611a88565b5f60209050601f831160018114611b79575f8415611b67578287015190505b611b718582611af6565b865550611bd8565b601f198416611b878661197d565b5f5b82811015611bae57848901518255600182019150602085019450602081019050611b89565b86831015611bcb5784890151611bc7601f891682611ada565b8355505b6001600288020188555050505b50505050505056fea26469706673582212208c0a060838548597d0d18436d2ea92efa3d44eaf24698abd742902932afa599464736f6c63430008140033","linkReferences":{},"deployedLinkReferences":{}}');

/***/ }),

/***/ "./utils/CustomToken.json":
/*!********************************!*\
  !*** ./utils/CustomToken.json ***!
  \********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

module.exports = JSON.parse('{"_format":"hh-sol-artifact-1","contractName":"CustomToken","sourceName":"contracts/CustomEx.sol","abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x608060405234801562000010575f80fd5b50604051620019f7380380620019f7833981810160405281019062000036919062000377565b8181816003908162000049919062000631565b5080600490816200005b919062000631565b5050506200007b336a084595161401484a0000006200008360201b60201c565b505062000826565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000f4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000eb9062000773565b60405180910390fd5b620001075f8383620001e860201b60201c565b8060025f8282546200011a9190620007c0565b92505081905550805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508173ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620001c991906200080b565b60405180910390a3620001e45f8383620001ed60201b60201c565b5050565b505050565b505050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b62000253826200020b565b810181811067ffffffffffffffff821117156200027557620002746200021b565b5b80604052505050565b5f62000289620001f2565b905062000297828262000248565b919050565b5f67ffffffffffffffff821115620002b957620002b86200021b565b5b620002c4826200020b565b9050602081019050919050565b5f5b83811015620002f0578082015181840152602081019050620002d3565b5f8484015250505050565b5f620003116200030b846200029c565b6200027e565b90508281526020810184848401111562000330576200032f62000207565b5b6200033d848285620002d1565b509392505050565b5f82601f8301126200035c576200035b62000203565b5b81516200036e848260208601620002fb565b91505092915050565b5f806040838503121562000390576200038f620001fb565b5b5f83015167ffffffffffffffff811115620003b057620003af620001ff565b5b620003be8582860162000345565b925050602083015167ffffffffffffffff811115620003e257620003e1620001ff565b5b620003f08582860162000345565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200044957607f821691505b6020821081036200045f576200045e62000404565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620004c37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000486565b620004cf868362000486565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f62000519620005136200050d84620004e7565b620004f0565b620004e7565b9050919050565b5f819050919050565b6200053483620004f9565b6200054c620005438262000520565b84845462000492565b825550505050565b5f90565b6200056262000554565b6200056f81848462000529565b505050565b5b8181101562000596576200058a5f8262000558565b60018101905062000575565b5050565b601f821115620005e557620005af8162000465565b620005ba8462000477565b81016020851015620005ca578190505b620005e2620005d98562000477565b83018262000574565b50505b505050565b5f82821c905092915050565b5f620006075f1984600802620005ea565b1980831691505092915050565b5f620006218383620005f6565b9150826002028217905092915050565b6200063c82620003fa565b67ffffffffffffffff8111156200065857620006576200021b565b5b62000664825462000431565b620006718282856200059a565b5f60209050601f831160018114620006a7575f841562000692578287015190505b6200069e858262000614565b8655506200070d565b601f198416620006b78662000465565b5f5b82811015620006e057848901518255600182019150602085019450602081019050620006b9565b86831015620007005784890151620006fc601f891682620005f6565b8355505b6001600288020188555050505b505050505050565b5f82825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f2061646472657373005f82015250565b5f6200075b601f8362000715565b9150620007688262000725565b602082019050919050565b5f6020820190508181035f8301526200078c816200074d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f620007cc82620004e7565b9150620007d983620004e7565b9250828201905080821115620007f457620007f362000793565b5b92915050565b6200080581620004e7565b82525050565b5f602082019050620008205f830184620007fa565b92915050565b6111c380620008345f395ff3fe608060405234801561000f575f80fd5b50600436106100a7575f3560e01c8063395093511161006f578063395093511461016557806370a082311461019557806395d89b41146101c5578063a457c2d7146101e3578063a9059cbb14610213578063dd62ed3e14610243576100a7565b806306fdde03146100ab578063095ea7b3146100c957806318160ddd146100f957806323b872dd14610117578063313ce56714610147575b5f80fd5b6100b3610273565b6040516100c09190610add565b60405180910390f35b6100e360048036038101906100de9190610b8e565b610303565b6040516100f09190610be6565b60405180910390f35b610101610325565b60405161010e9190610c0e565b60405180910390f35b610131600480360381019061012c9190610c27565b61032e565b60405161013e9190610be6565b60405180910390f35b61014f61035c565b60405161015c9190610c92565b60405180910390f35b61017f600480360381019061017a9190610b8e565b610364565b60405161018c9190610be6565b60405180910390f35b6101af60048036038101906101aa9190610cab565b61039a565b6040516101bc9190610c0e565b60405180910390f35b6101cd6103df565b6040516101da9190610add565b60405180910390f35b6101fd60048036038101906101f89190610b8e565b61046f565b60405161020a9190610be6565b60405180910390f35b61022d60048036038101906102289190610b8e565b6104e4565b60405161023a9190610be6565b60405180910390f35b61025d60048036038101906102589190610cd6565b610506565b60405161026a9190610c0e565b60405180910390f35b60606003805461028290610d41565b80601f01602080910402602001604051908101604052809291908181526020018280546102ae90610d41565b80156102f95780601f106102d0576101008083540402835291602001916102f9565b820191905f5260205f20905b8154815290600101906020018083116102dc57829003601f168201915b5050505050905090565b5f8061030d610588565b905061031a81858561058f565b600191505092915050565b5f600254905090565b5f80610338610588565b9050610345858285610752565b6103508585856107dd565b60019150509392505050565b5f6012905090565b5f8061036e610588565b905061038f8185856103808589610506565b61038a9190610d9e565b61058f565b600191505092915050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600480546103ee90610d41565b80601f016020809104026020016040519081016040528092919081815260200182805461041a90610d41565b80156104655780601f1061043c57610100808354040283529160200191610465565b820191905f5260205f20905b81548152906001019060200180831161044857829003601f168201915b5050505050905090565b5f80610479610588565b90505f6104868286610506565b9050838110156104cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c290610e41565b60405180910390fd5b6104d8828686840361058f565b60019250505092915050565b5f806104ee610588565b90506104fb8185856107dd565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f490610ecf565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361066b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066290610f5d565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107459190610c0e565b60405180910390a3505050565b5f61075d8484610506565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107d757818110156107c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c090610fc5565b60405180910390fd5b6107d6848484840361058f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361084b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084290611053565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b0906110e1565b60405180910390fd5b6108c4838383610a49565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610947576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093e9061116f565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a309190610c0e565b60405180910390a3610a43848484610a4e565b50505050565b505050565b505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610a8a578082015181840152602081019050610a6f565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610aaf82610a53565b610ab98185610a5d565b9350610ac9818560208601610a6d565b610ad281610a95565b840191505092915050565b5f6020820190508181035f830152610af58184610aa5565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b2a82610b01565b9050919050565b610b3a81610b20565b8114610b44575f80fd5b50565b5f81359050610b5581610b31565b92915050565b5f819050919050565b610b6d81610b5b565b8114610b77575f80fd5b50565b5f81359050610b8881610b64565b92915050565b5f8060408385031215610ba457610ba3610afd565b5b5f610bb185828601610b47565b9250506020610bc285828601610b7a565b9150509250929050565b5f8115159050919050565b610be081610bcc565b82525050565b5f602082019050610bf95f830184610bd7565b92915050565b610c0881610b5b565b82525050565b5f602082019050610c215f830184610bff565b92915050565b5f805f60608486031215610c3e57610c3d610afd565b5b5f610c4b86828701610b47565b9350506020610c5c86828701610b47565b9250506040610c6d86828701610b7a565b9150509250925092565b5f60ff82169050919050565b610c8c81610c77565b82525050565b5f602082019050610ca55f830184610c83565b92915050565b5f60208284031215610cc057610cbf610afd565b5b5f610ccd84828501610b47565b91505092915050565b5f8060408385031215610cec57610ceb610afd565b5b5f610cf985828601610b47565b9250506020610d0a85828601610b47565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610d5857607f821691505b602082108103610d6b57610d6a610d14565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610da882610b5b565b9150610db383610b5b565b9250828201905080821115610dcb57610dca610d71565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f775f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f610e2b602583610a5d565b9150610e3682610dd1565b604082019050919050565b5f6020820190508181035f830152610e5881610e1f565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f610eb9602483610a5d565b9150610ec482610e5f565b604082019050919050565b5f6020820190508181035f830152610ee681610ead565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f610f47602283610a5d565b9150610f5282610eed565b604082019050919050565b5f6020820190508181035f830152610f7481610f3b565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000005f82015250565b5f610faf601d83610a5d565b9150610fba82610f7b565b602082019050919050565b5f6020820190508181035f830152610fdc81610fa3565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f61103d602583610a5d565b915061104882610fe3565b604082019050919050565b5f6020820190508181035f83015261106a81611031565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f6110cb602383610a5d565b91506110d682611071565b604082019050919050565b5f6020820190508181035f8301526110f8816110bf565b9050919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f611159602683610a5d565b9150611164826110ff565b604082019050919050565b5f6020820190508181035f8301526111868161114d565b905091905056fea26469706673582212207a827bd6ef4097ad8ef95ed394ff490855a6f34285a651dc2f85e397efffa58564736f6c63430008140033","deployedBytecode":"0x608060405234801561000f575f80fd5b50600436106100a7575f3560e01c8063395093511161006f578063395093511461016557806370a082311461019557806395d89b41146101c5578063a457c2d7146101e3578063a9059cbb14610213578063dd62ed3e14610243576100a7565b806306fdde03146100ab578063095ea7b3146100c957806318160ddd146100f957806323b872dd14610117578063313ce56714610147575b5f80fd5b6100b3610273565b6040516100c09190610add565b60405180910390f35b6100e360048036038101906100de9190610b8e565b610303565b6040516100f09190610be6565b60405180910390f35b610101610325565b60405161010e9190610c0e565b60405180910390f35b610131600480360381019061012c9190610c27565b61032e565b60405161013e9190610be6565b60405180910390f35b61014f61035c565b60405161015c9190610c92565b60405180910390f35b61017f600480360381019061017a9190610b8e565b610364565b60405161018c9190610be6565b60405180910390f35b6101af60048036038101906101aa9190610cab565b61039a565b6040516101bc9190610c0e565b60405180910390f35b6101cd6103df565b6040516101da9190610add565b60405180910390f35b6101fd60048036038101906101f89190610b8e565b61046f565b60405161020a9190610be6565b60405180910390f35b61022d60048036038101906102289190610b8e565b6104e4565b60405161023a9190610be6565b60405180910390f35b61025d60048036038101906102589190610cd6565b610506565b60405161026a9190610c0e565b60405180910390f35b60606003805461028290610d41565b80601f01602080910402602001604051908101604052809291908181526020018280546102ae90610d41565b80156102f95780601f106102d0576101008083540402835291602001916102f9565b820191905f5260205f20905b8154815290600101906020018083116102dc57829003601f168201915b5050505050905090565b5f8061030d610588565b905061031a81858561058f565b600191505092915050565b5f600254905090565b5f80610338610588565b9050610345858285610752565b6103508585856107dd565b60019150509392505050565b5f6012905090565b5f8061036e610588565b905061038f8185856103808589610506565b61038a9190610d9e565b61058f565b600191505092915050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600480546103ee90610d41565b80601f016020809104026020016040519081016040528092919081815260200182805461041a90610d41565b80156104655780601f1061043c57610100808354040283529160200191610465565b820191905f5260205f20905b81548152906001019060200180831161044857829003601f168201915b5050505050905090565b5f80610479610588565b90505f6104868286610506565b9050838110156104cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c290610e41565b60405180910390fd5b6104d8828686840361058f565b60019250505092915050565b5f806104ee610588565b90506104fb8185856107dd565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f490610ecf565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361066b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066290610f5d565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107459190610c0e565b60405180910390a3505050565b5f61075d8484610506565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107d757818110156107c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c090610fc5565b60405180910390fd5b6107d6848484840361058f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361084b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084290611053565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b0906110e1565b60405180910390fd5b6108c4838383610a49565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610947576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093e9061116f565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a309190610c0e565b60405180910390a3610a43848484610a4e565b50505050565b505050565b505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610a8a578082015181840152602081019050610a6f565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610aaf82610a53565b610ab98185610a5d565b9350610ac9818560208601610a6d565b610ad281610a95565b840191505092915050565b5f6020820190508181035f830152610af58184610aa5565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b2a82610b01565b9050919050565b610b3a81610b20565b8114610b44575f80fd5b50565b5f81359050610b5581610b31565b92915050565b5f819050919050565b610b6d81610b5b565b8114610b77575f80fd5b50565b5f81359050610b8881610b64565b92915050565b5f8060408385031215610ba457610ba3610afd565b5b5f610bb185828601610b47565b9250506020610bc285828601610b7a565b9150509250929050565b5f8115159050919050565b610be081610bcc565b82525050565b5f602082019050610bf95f830184610bd7565b92915050565b610c0881610b5b565b82525050565b5f602082019050610c215f830184610bff565b92915050565b5f805f60608486031215610c3e57610c3d610afd565b5b5f610c4b86828701610b47565b9350506020610c5c86828701610b47565b9250506040610c6d86828701610b7a565b9150509250925092565b5f60ff82169050919050565b610c8c81610c77565b82525050565b5f602082019050610ca55f830184610c83565b92915050565b5f60208284031215610cc057610cbf610afd565b5b5f610ccd84828501610b47565b91505092915050565b5f8060408385031215610cec57610ceb610afd565b5b5f610cf985828601610b47565b9250506020610d0a85828601610b47565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610d5857607f821691505b602082108103610d6b57610d6a610d14565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610da882610b5b565b9150610db383610b5b565b9250828201905080821115610dcb57610dca610d71565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f775f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f610e2b602583610a5d565b9150610e3682610dd1565b604082019050919050565b5f6020820190508181035f830152610e5881610e1f565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f610eb9602483610a5d565b9150610ec482610e5f565b604082019050919050565b5f6020820190508181035f830152610ee681610ead565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f610f47602283610a5d565b9150610f5282610eed565b604082019050919050565b5f6020820190508181035f830152610f7481610f3b565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000005f82015250565b5f610faf601d83610a5d565b9150610fba82610f7b565b602082019050919050565b5f6020820190508181035f830152610fdc81610fa3565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f61103d602583610a5d565b915061104882610fe3565b604082019050919050565b5f6020820190508181035f83015261106a81611031565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f6110cb602383610a5d565b91506110d682611071565b604082019050919050565b5f6020820190508181035f8301526110f8816110bf565b9050919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f611159602683610a5d565b9150611164826110ff565b604082019050919050565b5f6020820190508181035f8301526111868161114d565b905091905056fea26469706673582212207a827bd6ef4097ad8ef95ed394ff490855a6f34285a651dc2f85e397efffa58564736f6c63430008140033","linkReferences":{},"deployedLinkReferences":{}}');

/***/ })

});